Settings
1)	Apktool - select apktool  version which you want use as default(latest versions of apktool supports two aapt versions(aapt and aapt2), you can select use aapt2 or not)
2)	Smali - select smali version which you want use as default
3)	Framework version - here you can select framework which will be used as default for decompiling apks(Apkchanger can select framework version automatically for each apk(only default frameworks supported)).
	You can add there your own frameworks(up to 8 files supported). Just select “add framework files” option and copying framework files to "copy_framework_files_here" folder”, then enter framework name and tag.
4)	Signature key - key which will be used for apk signing(autoselection supported)
5)	Compression level:
Try to match original apk compression – apkchanger detects which files where or not compressed in original apk and compress new apk file according to this settings.
Use zopfli compression during zip aligning – apkchanger can use zopfli during zip aligning(slover, but better compression in result)
-	Unknown files compression level – compression level for files(that are not images, archives, audio, video, xml, dex, arsc) inside apk
-	Image files compression - compression level for image files (such as png, jpg) - recommended 0, images are already compressed files, so they don`t need compression
-	Audio files compression - compression level for audio files
-	Video files compression - compression level for video files
-	Xml files compression - compression level for xml files
-	Dex files compression - compression level for dex file (consist of smali-files, when unpacked)
-	ARSC files compression - compression level for arsc file (consist of values files)

6)	Optimization level - optimization level for images inside apk - 9 is the best optimization level - but it is the most slow, 1 - lowest optimization level, but the most fast.
7)	Delete unnecessary files - you can turn this option on for autodeleting unneeded files(locales, resolutions, architectures) from apk.
	Parameters for which apk will be optimized defined in ufl file (unnecessary folder list) - you can find it in “other\fl” folder and edit with any text editor.
	Example: If you have device with xhdpi resolution and you don`t need ldpi, mdpi and xhdpi support in apk – you can define *-xhdpi in ufl list and all other resolutions will be deleted.
	If you need only Russian translation in apk – you can define *-ru and all other translations will be deleted.
	You can create custom ufl file for apk files, that will overwrite  default list ( For this you must create new file(or copy default list) in other\fl and rename it as: your_apk_file_name.ufl .
	Example: If you want create custom list for Phone.apk you should create Phone.ufl file in other\fl folder and define there settings for this apk.
	Program will notify you that custom list found – it will show “Found custom unnecessary folder list for Phone.apk” during decompilation. )
8)	Remove debug info – remove debug info during dex files decompilation or not.
9)	Decompile dex to java – decompiles dex files to java with one of dex2java decompilers(jadx, procyon, fernflower, cfr decompilers supported and dex2jar, enjarify  dex to jar converters supported)
10)	Use bruteforce – if apk can’t be decompiled with default framework, apkchanger can try to decompile it with all other frameworks. 
11)	Connect adb to Wi-Fi - you can connect adb via Wi-Fi to your phone and install programs or use logcat via Wi-Fi
12)	Jvm heap limit – java runtime maximum heap size.
13)	Cores limit – maximum cores limit that program can use.
14)	Language - select program language.
15)	Text color - color of the text which program will use.
16)	Notifications - turn on or off program notifications
17)	Check for program updates – download latest program updates(I strongly recommend use latest apkchanger version with all bugfixes) 
